// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Strength.DB;

namespace Strength.DB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210317222458_ProgramInExercises")]
    partial class ProgramInExercises
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Strength.DB.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("Strength.DB.Models.ExCompletion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Completions");
                });

            modelBuilder.Entity("Strength.DB.Models.ExProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("Strength.DB.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("SetsAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Strength.DB.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExCompletionId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExCompletionId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("Strength.DB.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Strength.DB.Models.Day", b =>
                {
                    b.HasOne("Strength.DB.Models.ExProgram", "Program")
                        .WithMany("Days")
                        .HasForeignKey("ProgramId");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Strength.DB.Models.ExCompletion", b =>
                {
                    b.HasOne("Strength.DB.Models.Exercise", "Exercise")
                        .WithMany("Completions")
                        .HasForeignKey("ExerciseId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("Strength.DB.Models.ExProgram", b =>
                {
                    b.HasOne("Strength.DB.User", "User")
                        .WithMany("Programs")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Strength.DB.Models.Exercise", b =>
                {
                    b.HasOne("Strength.DB.Models.Day", "Day")
                        .WithMany("Exercises")
                        .HasForeignKey("DayId");

                    b.HasOne("Strength.DB.Models.ExProgram", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Day");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Strength.DB.Models.Set", b =>
                {
                    b.HasOne("Strength.DB.Models.ExCompletion", "ExCompletion")
                        .WithMany("Sets")
                        .HasForeignKey("ExCompletionId");

                    b.Navigation("ExCompletion");
                });

            modelBuilder.Entity("Strength.DB.Models.Day", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("Strength.DB.Models.ExCompletion", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("Strength.DB.Models.ExProgram", b =>
                {
                    b.Navigation("Days");
                });

            modelBuilder.Entity("Strength.DB.Models.Exercise", b =>
                {
                    b.Navigation("Completions");
                });

            modelBuilder.Entity("Strength.DB.User", b =>
                {
                    b.Navigation("Programs");
                });
#pragma warning restore 612, 618
        }
    }
}
